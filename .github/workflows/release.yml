name: Simple Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true
        default: "v1.0.0"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: ffmpegrust-linux-x86_64
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            name: ffmpegrust-macos-aarch64
            archive: tar.gz

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

      - name: Clear cargo cache
        run: |
          cargo clean
          rm -rf ~/.cargo/registry/cache
          rm -rf ~/.cargo/git/db

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release folder
        run: mkdir release-files

      - name: Copy files (Unix)
        run: |
          cp target/${{ matrix.target }}/release/ffmpegrust release-files/
          cp README.md release-files/
          echo '#!/bin/bash' > release-files/run.sh
          echo './ffmpegrust' >> release-files/run.sh
          chmod +x release-files/run.sh
          chmod +x release-files/ffmpegrust

      - name: Create archive (Linux/Mac)
        if: matrix.archive == 'tar.gz'
        run: |
          cd release-files
          tar -czf ../${{ matrix.name }}.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Get tag name
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: FFmpeg Converter Pro ${{ steps.get_tag.outputs.tag }}
          body: |
            ## FFmpeg Converter Pro ${{ steps.get_tag.outputs.tag }}

            ### Downloads
            - **Linux**: ffmpegrust-linux-x86_64.tar.gz
            - **macOS**: ffmpegrust-macos-aarch64.tar.gz (Apple Silicon)
            - **Windows**: Coming soon (fixing build issues)

            ### Installation
            1. Download the file for your platform
            2. Extract the archive
            3. Run the executable or use the provided run script

            ### Requirements
            - **FFmpeg must be installed** on your system

            - macOS: Use `brew install ffmpeg`
            - Linux: Use your package manager (e.g., `sudo apt install ffmpeg`)
          files: |
            *.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
